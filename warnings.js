const config = require('./config.json');
const email = require('emailjs');
const Slack = require('slack-node');
const os = require('os');

const warnings = {};
const slack = new Slack();
slack.setWebhook(config.webhook);

const emailServer = email.server.connect({
    user: config.user,
    password: config.password,
    host: config.host,
    ssl: true
});

warnings.slackMessage = function (message, cb) {
    slack.webhook({
        channel: config.slackChannel,
        username: config.slackName || "Stream Watcher",
        text: os.hostname+": "+message
    }, function () {
        if (cb && typeof cb == "function") {
            cb();
        }
    });
}

warnings.emailMessage = function (subject, message) {
    emailServer.send({
        text:    message, 
        from:    "Stream Monitor <"+config.user+">", 
        to:      "Stream Monitor <"+config.user+">", 
        bcc:     config.recipients,
        subject: "[STREAM MONITOR] "+subject
    }, function(err, message) { console.log(err || message); });
}

warnings.sendReport = function (date, cb) {
    emailServer.send({
        text:    `
        Goodnight,

        This is a daily loudness report generated by the stream monitor. ${config.logdataURI ? `Raw log data is available at ${config.logdataURI}` : ''}

        This is an automated email. If you wish to unsubscribe, please email contact@balte.nl
        `, 
        from:    "Stream Monitor <"+config.user+">", 
        to:      "Stream Monitor <"+config.user+">", 
        bcc:     config.reportRecipients,
        subject: "[STREAM MONITOR] Daily loudness report",
        attachment:
        [
            { path:`./generated/${date}_integrated.svg`, type: "image/svg", name: `${date}_integrated.svg`, inline: false },
            { path:`./generated/${date}_momentary.svg`, type: "image/svg", name: `${date}_momentary.svg`, inline: false }
        ]
    }, function(err, message) { console.log(err || message); if (cb) cb(); });
}

module.exports = warnings;